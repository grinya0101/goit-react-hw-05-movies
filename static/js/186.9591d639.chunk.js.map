{"version":3,"file":"static/js/186.9591d639.chunk.js","mappings":"+PAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,8GAEJC,EAAAA,EAAAA,IAAWJ,GAFP,OAEjBK,EAFiB,OAGvBN,EAAWM,GAHY,gDAKvBC,QAAQC,IAAR,MALuB,yDAAH,qDAQxBJ,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAWV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,2BACE,wBACE,oCAAYD,QAEd,uBAAIC,MAJGF,EADkB,IAQ7B,OAAOZ,EAAQe,OAAS,GACtB,8BAAML,EAAN,QAEA,mEAEH,C,8LClCKM,EAAU,mCAEHC,EAAa,mCAAG,+GAEFC,EAAAA,GAAAA,IAAA,kEACsCF,IAHpC,uBAEjBT,EAFiB,EAEjBA,KAFiB,kBAMlBA,EAAKY,SANa,gCAQzBX,QAAQY,MAAR,MARyB,yDAAH,qDAyBbC,EAAY,mCAAG,WAAMT,GAAN,kGAEDM,EAAAA,GAAAA,IAAA,6CACiBN,EADjB,oBAC+BI,EAD/B,oBAFC,uBAEhBT,EAFgB,EAEhBA,KAFgB,kBAMjBA,GANiB,gCAQxBC,QAAQY,MAAR,MARwB,yDAAH,sDAaZE,EAAgB,mCAAG,WAAMC,GAAN,kGAELL,EAAAA,GAAAA,IAAA,4DACgCF,EADhC,kBACiDO,EADjD,yBAFK,uBAEpBhB,EAFoB,EAEpBA,KAFoB,kBAMrBA,EAAKY,SANgB,gCAQ5BX,QAAQY,MAAR,MAR4B,yDAAH,sDAahBI,EAAO,mCAAG,WAAMZ,GAAN,kGAEIM,EAAAA,GAAAA,IAAA,6CACiBN,EADjB,qEAFJ,uBAEXL,EAFW,EAEXA,KAFW,kBAMZA,EAAKkB,MANO,gCAQnBjB,QAAQY,MAAR,MARmB,yDAAH,sDAcPd,EAAU,mCAAG,WAAMM,GAAN,kGAECM,EAAAA,GAAAA,IAAA,6CACiBN,EADjB,qEAFD,uBAEdL,EAFc,EAEdA,KAFc,kBAMfA,EAAKY,SANU,gCAQtBX,QAAQY,MAAR,MARsB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","components/utils/api-request.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetReviews } from 'components/utils/api-request';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n\n  //определяем id фильма из адресной строки\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviewsMovies = async () => {\n      try {\n        const data = await GetReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviewsMovies();\n  }, [movieId]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <p>\n        <b>Author: {author}</b>\n      </p>\n      <p>{content}</p>\n    </li>\n  ));\n  return reviews.length > 0 ? (\n    <ul> {elements} </ul>\n  ) : (\n    <p>We don't have any reviews for this movie</p>\n  );\n}\n","import axios from 'axios';\nconst API_KEY = '83cba2c85d0df477852b094af9fbdddb';\n\nexport const TrendingMovie = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetGenre = async () => {\n  try {\n    const { genres } = await axios.get(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n    );\n\n    return genres;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// https://api.themoviedb.org/3/genre/movie/list?api_key=83cba2c85d0df477852b094af9fbdddb\n\nexport const GetMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// https://api.themoviedb.org/3/movie/766220?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US\n\nexport const GetMovieBySearch = async q => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${q}&include_adult=false`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// https://api.themoviedb.org/3/search/movie?api_key=83cba2c85d0df477852b094af9fbdddb&query=cat&page=1&include_adult=false\n\nexport const GetCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US`\n    );\n\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// https://api.themoviedb.org/3/movie/361743/credits?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US\n\nexport const GetReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// https://api.themoviedb.org/3/movie/361743/reviews?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviewsMovies","GetReviews","data","console","log","elements","map","id","author","content","length","API_KEY","TrendingMovie","axios","results","error","GetMovieById","GetMovieBySearch","q","GetCast","cast"],"sourceRoot":""}